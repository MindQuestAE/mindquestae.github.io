name: MindQuest Form Tests

on:
  pull_request:
    branches: [ main]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.0

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4.1.0
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        npm install

    - name: Setup Chrome and ChromeDriver
      uses: browser-actions/setup-chrome@v1.4.0
      with:
        chrome-version: stable

    - name: Install ChromeDriver
      run: |
        npx selenium-manager --driver chromedriver || echo "ChromeDriver setup attempted"

    - name: Start development server
      run: |
        python3 -m http.server 8000 &
        echo "SERVER_PID=$!" >> $GITHUB_ENV
        sleep 5

    - name: Wait for server to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:8000; do sleep 1; done'

    - name: Run form validation tests
      run: |
        HEADLESS=true CI=true npm test
      env:
        CI: true
        HEADLESS: true

    - name: Run success scenario tests
      run: |
        HEADLESS=true npx mocha tests/specs/formSuccess.test.js --timeout 60000
      env:
        CI: true
        HEADLESS: true

    - name: Run validation tests
      run: |
        HEADLESS=true npx mocha tests/specs/formValidation.test.js --timeout 60000
      env:
        CI: true
        HEADLESS: true

    - name: Run performance tests
      run: |
        HEADLESS=true npx mocha tests/specs/formPerformance.test.js --timeout 120000
      env:
        CI: true
        HEADLESS: true

    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4.4.0
      with:
        name: test-screenshots-${{ matrix.node-version }}
        path: tests/screenshots/
        retention-days: 7

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4.4.0
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results.xml
          coverage/
        retention-days: 30

    - name: Stop development server
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          kill $SERVER_PID 2>/dev/null || true
        fi
        pkill -f "python3 -m http.server" || true

  test-cross-browser:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.0

    - name: Setup Node.js
      uses: actions/setup-node@v4.1.0
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: npm install

    - name: Setup browsers
      if: matrix.browser == 'firefox'
      uses: browser-actions/setup-firefox@v1.4.0

    - name: Setup Chrome
      if: matrix.browser == 'chrome'
      uses: browser-actions/setup-chrome@v1.4.0

    - name: Start development server
      run: |
        python3 -m http.server 8000 &
        sleep 5

    - name: Run critical path tests only
      run: |
        HEADLESS=true npx mocha tests/specs/formSuccess.test.js --grep "should successfully submit form with all valid data" --timeout 60000
      env:
        CI: true
        HEADLESS: true
        BROWSER: ${{ matrix.browser }}

  security-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.0

    - name: Setup Node.js
      uses: actions/setup-node@v4.1.0
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: npm install

    - name: Start development server
      run: |
        python3 -m http.server 8000 &
        sleep 5

    - name: Run security-focused tests
      run: |
        HEADLESS=true npx mocha tests/specs/formValidation.test.js --grep "should reject invalid|should handle.*injection" --timeout 60000
      env:
        CI: true
        HEADLESS: true

    - name: Audit npm packages
      run: npm audit --audit-level moderate
